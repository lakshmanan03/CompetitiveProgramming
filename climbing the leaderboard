import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the climbingLeaderboard function below.
    static int[] climbingLeaderboard(int[] scores, int[] alice) {
         
      int [] result = new int[alice.length];
        int[] dscores = new int[scores.length];  
        int j = 0;  
        for (int i=0; i<scores.length-1; i++){  
            if (scores[i] != scores[i+1]){  
                dscores[j++] = scores[i];  
            }  
         }  
        dscores[j++] = scores[scores.length-1];     
       
        for(int k=0;k<alice.length;k++)
    {
        result[k]=BinarySearch(dscores,alice[k],0,dscores.length-1);
    }
 
        return result;
    }
   
      private static int BinarySearch(int[] a,int pos,int start,int end) {
        
    
        while (start<end)
        {
            
        
    int mid =(start+end)/2;
    
    if(a[mid]==pos)
     return mid+1;
    
    if(pos<a[mid])
    {
        start=mid+1;
        
    }
    
    if(pos>a[mid])
    {
        end=mid-1;
    }
    
        }
    return start+1;
    
    }


    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int scoresCount = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] scores = new int[scoresCount];

        String[] scoresItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < scoresCount; i++) {
            int scoresItem = Integer.parseInt(scoresItems[i]);
            scores[i] = scoresItem;
        }

        int aliceCount = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] alice = new int[aliceCount];

        String[] aliceItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < aliceCount; i++) {
            int aliceItem = Integer.parseInt(aliceItems[i]);
            alice[i] = aliceItem;
        }

        int[] result = climbingLeaderboard(scores, alice);

        for (int i = 0; i < result.length; i++) {
            bufferedWriter.write(String.valueOf(result[i]));

            if (i != result.length - 1) {
                bufferedWriter.write("\n");
            }
        }

        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
