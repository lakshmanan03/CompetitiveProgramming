import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the caesarCipher function below.
    static String caesarCipher(String s, int k) {

        k =k%26;
        char[] chars = new char[26];

        for (int i = 0; i < 26; i++) {
            chars[i] = (char) (i + 97);

        }

        StringBuilder caesar = new StringBuilder("");

        for (int i = 0; i < s.length(); i++) {
            if ((s.charAt(i)>=65 && s.charAt(i)<91)|| (s.charAt(i)> 96 && s.charAt(i)< 123) ) {
                 int pos = s.charAt(i);
                if (pos < 97) {
                    pos = pos + 32;
                    pos = pos - 'a';
                    if (pos + k <= 25) {
                        char temp = (char) (chars[pos + k] -32);
                        caesar.append(temp);
                    } else {
                        char temp1 = (char) (chars[k - (25 - pos) - 1] - 32);
                        caesar.append(temp1);
                    }
                } else {
                    pos = pos - 'a';
                    if (pos + k <= 25) {
                        caesar.append(chars[pos + k]);
                    } else {
                        caesar.append(chars[k - (25 - pos) - 1]);
                    }
                }
               
            } else {
                caesar.append(s.charAt(i));
            }
        }

      return caesar.toString();

    
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        String s = scanner.nextLine();

        int k = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        String result = caesarCipher(s, k);

        bufferedWriter.write(result);
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
