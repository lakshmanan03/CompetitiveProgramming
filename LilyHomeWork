package com.hackerRank;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class LilyHomeWrok {

	public static void main(String[] args) {
		int arr[]= {2,5,3,1};
		int arr1[]= new int[arr.length];
		int swap=0;
        int reverseSwap=0;
       Map valuePos= new HashMap();
       Map reversePos = new HashMap();
       int[] minArray= new int[arr.length];
      for (int i =0; i< arr.length; i++)
      {
      valuePos.put(arr[i],i);
      minArray[i]=arr[i];
      arr1[i]=arr[i];
      reversePos.put(arr[i],i);
      }
            int[] reverseArray= new int[minArray.length];

      Arrays. sort(minArray);

        for (int i =minArray.length-1; i>=0;i--)
        {
            reverseArray[i] =minArray[(minArray.length-1)-i];
        }
       

      
      for (int j=0; j<arr.length;j++)
      {			
			
			 if(arr[j]!=minArray[j]) 
			 { int pos=(int)valuePos.get(minArray[j]);
			 valuePos.put(minArray[j],j); valuePos.put(arr[j],pos); 
			 swap(arr,pos,j);
			 swap=swap+1;
			 
			  }
			 
		           if( arr1[j]!= reverseArray[j])
          {
          int rpos= (int) reversePos.get(reverseArray[j]);
          
          reversePos.put(reverseArray[j],j);
          reversePos.put(arr1[j],rpos);
          swap(arr1,rpos,j);
          reverseSwap = reverseSwap+1;
          
          } 
		           
		           List<List<String>> st = new ArrayList<>();
		           
		           for(List<String> ar : st)
		           { 
		        	   ar.get
		           }
      
      }
    

   System.out.println(Math.min(swap, reverseSwap));

	}

	private static void swap(int[] arr, int rpos, int j) {
	 
		int temp = arr[rpos];
		arr[rpos]=arr[j];
		arr[j]=temp;
		
	}

}
